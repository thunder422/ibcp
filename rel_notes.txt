Interactive BASIC Compiler Project
File: rel_notes.txt - contains release notes for each version posted
Copyright (C) 2009-2010  Thunder422

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

For a copy of the GNU General Public License,
see <http://www.gnu.org/licenses/>.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Planned Roadmap:

	Translator - INPUT Command
	Translator - Colons
	Translator - IF-THEN-ELSE-ENDIF Commands
	Translator - FOR-NEXT Commands
	Translator - DO-LOOP Commands
	Internal Language Definition
	Dictionary Definition
	Encoder - To single lines (not to internal program)
	Recreator - For single lines (of implemented commands)
	Translator - Single line DEF FN
	Translator - More Commands
	Translator - Line Numbers
	Translator - Immediate Commands
	Internal Program Definition
	Encoder - Program sub-module
	Encoder - Temporary Strings
	Recreator - From internal program


Release 0.1.14-pre-1 (2010-06-26)

	Translator preliminary developmental release - all known error
	reporting issues are now being reported as desired.  Other
	changes include:

	    - token status (error) messages put into an array
	    - error template created for table and token status errors

	Note: a CVS branch will be used for future development for each
	subsequent developmental release.  This will aid in development
	where intra-day development can be committed to the CVS
	repository without disturbing the main truck containing the last
	release.  The result of this can be seen from the CVS revision
	tags in the source files in this and future preliminary
	(formally called interim) releases.  This should not show up in
	formal developmental releases.  New (listed first) and updated
	files include:

	ibcp.h           - added error template (replaces table error)
	ibcp.cpp         - token status messages and initialization
	table.cpp        - minor updates due to new error template
	test_ibcp.cpp    - more error tests, removed error messages
	translator.cpp   - added checks to report desired errors
	translator11.txt - changes to error messages, new tests


Release 0.1.13 (2010-06-15)

	Translator developmental release - the PRINT command has been
	implemented with the print functions along with several updates
	including:

	    - command handler functions (PRINT, Assign and LET)
	    - command stack item flags (for used by commands)
	    - command support at end-of-line handling
	    - better error reporting (makes attempt to report when
	      is expected next when an error is detected)

	There are still several errors that are not being reported as
	desired.  The new translator11.txt file contains what error
	messages are expected and not what is actually output be the
	current program (the error messages were modified to the desired
	message from the actual output file).  The regression tests will
	report a failure with test #11.  These errors will be corrected
	in a future release.  A release is being made because it has
	been too long since the last release.  New (listed first) and
	updated files include:

	regtest          - updated for more tests
	regtest.bat      - updated for more tests
	translator10.txt - contains PRINT command test inputs
	translator11.txt - contains statement errors test inputs

	ibcp.h           - PRINT command support plus more
	parser5.txt      - updated for MID3$ code change
	table.cpp        - added support for PRINT command and functions
	test_ibcp.cpp    - added PRINT and statement error tests
	translator.cpp   - PRINT command support/better error reporting
	translator2.txt  - updated for change of error messages
	translator3.txt  - updated for change of error messages
	translator4.txt  - updated for change of error messages
	translator5.txt  - updated for change of error messages
	translator9.txt  - updated, PRINT now valid command


Release 0.1.12 (2010-05-30)

	Translator developmental release - the LET command has been
	implemented along with several updates including:

	    - token handler functions
	    - token sub-code support to replace dummy tokens
	    - parser bug fix for single '0' constant
	    - parser test updates (long overdue)
	    - numeric constant correction in test output code
	    - regression test scripts (MSYS/bash and Windows batch file)

	New (listed first) and updated files include:

	regtest         - bash script to run and compare all tests
	regtest.bat     - Windows batch file to run & compare all tests
	translator9.txt - contains command test inputs (LET for now)

	ibcp.cpp        - fixed usage message/token table entry flags
	ibcp.h          - updated support for translation of commands
	parser.cpp      - corrected bug where constant '0' caused error
	parser1.txt     - updated for code/data type changes
	parser2.txt     - updated for code/data type changes
	parser3.txt     - updated for code/data type changes
	parser4.txt     - updated for code/data type changes
	parser5.txt     - updated for code/data type changes
	table.cpp       - updated table entries for command support
	test_ibcp.cpp   - added command tests/update parser test code
	translator.cpp  - sub-code flag support, command (LET) support
	translator2.txt - updated for sub-code flag output
	translator3.txt - updated for sub-code flag output
	translator5.txt - updated for sub-code flag output
	translator6.txt - updated for sub-code flag output
	translator7.txt - updated for sub-code flag output
	translator8.txt - updated for sub-code flag output


Release 0.1.11 (2010-05-22)

	Translator developmental release - the string data type is now
	fully implemented by the Translator including temporary string
	handling, sub-string assignments, string list assignments, and
	mixed string and sub-string assignments.  Updated files include:

	codes.txt       - updated for mix-string assignment operator
	ibcp.h          - added sub-string support/new table errors
	stack.h         - added number of items on stack access function
	table.cpp       - sub-strings/new operator/max table checks
	test_ibcp.cpp   - added sub-string assignment test statements
	translator.cpp  - assign list: save all operands/mix strings
	translator7.txt - updated for string list operand correction
	translator8.txt - updated for additional string assignments


Release 0.1.11-dev-3 (2010-05-21)

	Translator interim developmental release - added support for
	sub-string assignments.  Also added checks for the maximum
	number of operands and associated codes constants against the
	actual table entries during table initialization.  New (listed
	first) and updated files include:

	translator8.txt - updated for correction of saved operands

	codes.txt       - updated for sub-string assignment operator
	ibcp.cpp        - added maximum operands/assoc codes errors
	ibcp.h          - added sub-string support/new table errors
	table.cpp       - sub-strings/new operator/max table checks
	test_ibcp.cpp   - added sub-string assignment test statements
	translator.cpp  - added sub-string plus assignment support


Release 0.1.11-dev-2 (2010-05-17)

	Translator interim developmental release - corrected minor
	problem with save operands pointing to inserted conversion code.
	Updated files include:

	translator.cpp  - correct saved operands/cvt code problem
	translator3.txt - updated for correction of saved operands
	translator4.txt - updated for correction of saved operands


Release 0.1.11-dev-1 (2010-05-15)

	Translator interim developmental release - support for temporary
	strings has been implemented.  Updated files include:

	ibcp.h          - updated for temporary string, saving operands
	table.cpp       - updated codes for temporary strings
	test_ibcp.cpp   - prints saved operands in output list
	translator.cpp  - temporary string, saves operands
	translator1.txt - updated for output of saved operands
	translator3.txt - updated for output of saved operands
	translator4.txt - updated for output of saved operands
	translator5.txt - updated for output of saved operands
	translator6.txt - updated for output of saved operands
	translator7.txt - updated for output of saved operands


Release 0.1.10 (2010-05-09)

	Translator developmental release - Data type handling has been
	implemented for assignment operators.  Expression related
	information has been moved from the table entries to a
	structure.  New (listed first) and updated files include:

	translator7.txt - output for assignment operator data type tests

	codes.txt       - updated for data type specific assign codes
	ibcp.h          - updated for expr info struct/data type assigns
	table.cpp       - updated for expr info struct/data type assigns
	test_ibcp.cpp   - added data type assignment test statements
	translator.cpp  - added data type handling for assignments
	translator5.txt - updated for assignment data type handling
	translator6.txt - updated for assignment data type handling


Release 0.1.9 (2010-04-28)

	Translator developmental release - Data type handling has been
	implemented for expressions, but not assignment operators.  Now
	that all the files are under CVS control, the entire source tree
	including the test directory files are included in this release
	(the source files contain a CVS ID tag, the text files do not).
	However, only future major releases will contain the entire
	source tree.  All of the test output files are now located in
	the test subdirectory.  New (listed first) and updated files
	include:

	translator6.txt - output for assignment operator tests

	codes.awk       - updated to allow multiple codes per line
	codes.txt       - updated for new data type specific codes
	ibcp.cpp        - corrected command line program name bug
	ibcp.h          - updated for data type handling
	ibcp.vpj        - added -static-libgcc for command line bug
	stack.h         - made minor improvements
	string.cpp      - renamed str memory to less confusing ptr
	string.h        - renamed str memory to less confusing ptr
	table.cpp       - updated for data type handling
	test_ibcp.cpp   - added data type test statements
	translator.cpp  - added data type handling
	test/:
	test_parser.cpp - (obsolete) made to compile with ibcp.h
	test_string.cpp - updated to compile in test subdirectory
	translator1.txt - updated for data type handling changes
	translator2.txt - updated for data type handling changes
	translator3.txt - updated for data type handling changes
	translator4.txt - updated for data type handling changes
	translator5.txt - updated for data type handling changes


Release 0.1.8 (2010-04-17)

	Translator developmental release - Assignment operators have
	been implemented.  New (listed first) and updated files include:

	translator5.txt - output for assignment operator tests

	codes.txt       - updated for new assign codes
	ibcp.h          - updated for assignments and references
	parser.cpp      - removed some errors that are valid statements
	table.cpp       - added assignment operator table entries
	test_ibcp.cpp   - added assignment operator test expressions
	translator.cpp  - added references and assignment operator support
	translator3.txt - updated for references flags in output


Release 0.1.7 (2010-04-04)

	Translator developmental release - The number of arguments are
	checked for internal functions.  New (listed first) and updated
	files include:

	translator4.txt - output for number of arguments tests

	codes.awk       - updated to allow digits is code names
	codes.txt       - updated for new function codes
	ibcp.h          - updated for number of arguments checking
	table.cpp       - updated number of arguments checking
	test_ibcp.cpp   - added number of arguments test expressions
	translator.cpp  - updated for number of arguments check support
	translator3.txt - updated for new function codes


Release 0.1.6 (2010-04-02)

	Translator developmental release - Array and function support
	has been implemented, debugged and tested.  This includes
	support for the comma operator.  New (listed first) and updated
	files include:

	stack.h         - contains simple stack class
	translator3.txt - output for array/function tests

	ibcp.cpp        - precedence for non-table entry token types
	ibcp.h          - updated for array and function support
	table.cpp       - changed precedence of the comma operator
	test_ibcp.cpp   - added array/function test expressions
	translator.cpp  - updated for array and function support

	test/test_stack2.cpp - small program to test simple stacks


Release 0.1.5 (2010-03-26)

	Translator developmental release - Parentheses support has been
	implemented, debugged and tested.  Updated files include:

	ibcp.h          - added new function to Translator
	test_ibcp.cpp   - added some more test parentheses expressions
	translator.cpp  - corrected problems with pending parentheses
	translator2.txt - updated for correct output, added new tests


Release 0.1.5-dev-1 (2010-03-25)

	Translator developmental release - Parentheses support has been
	implemented, and is mostly functional but does not handle all
	unnecessary parentheses correctly.  New (listed first) and
	updated files include:

	translator2.txt - test output for parentheses expressions

	ibcp.h          - changes to support parentheses
	table.h         - modified parentheses table entries
	test_ibcp.cpp   - added test parentheses expressions
	translator.cpp  - changes to support parentheses


Release 0.1.4 (2010-03-21)

	Translator developmental release - Simple expressions have been
	implemented, debugged and tested in the Translator.  New (listed
	first) and updated files include:

	codes.awk       - script to automatically generate codes.txt
	translator1.txt - test output for simple expressions

	codes.txt       - updated for current codes
	ibcp.h          - minor updates to Token, Table and Translator
	parser.cpp      - temporarily removed a immediate command check
	test_ibcp.cpp   - minor corrections, added test inputs
	translator.cpp  - pop final result, EOL check, unary op checks


Release 0.1.4-dev-2 (2010-03-20)

	Interim developmental release - Simple expressions has been
	implementation in the Translator and it is partially working but
	does not terminate correctly (must stopped program manually).
	Updated files include (test stack code has been removed):

	ibcp.cpp        - minor updates for test translator code
	ibcp.h          - updated Table and Translator
	parser.cpp      - set length for token for non-string tokens
	test_ibcp.cpp   - updates to translator test code
	translator.cpp  - implementation for simple expressions


Release 0.1.4-dev-1 (2010-03-18)

	Interim developmental release - Translator implementation is
	underway.  The main purpose of this release is to make sure
	changes compile.  The test_stack program was updated to test
	list of pointers (of structures allocated and deallocated
	outside of List class).  The parser test output files have been
	removed.  New (listed first) and updated files include:

	translator.cpp  - initial implementation (incomplete)

	ibcp.cpp        - added support for test translator code
	ibcp.h          - added Translator class, set_token() to Table
	parser.cpp      - replace some code with call to set_token()
	test_ibcp.cpp   - added translator test functions

	test/stack.txt      - output of test_stack program
	test/test_stack.cpp - added pointer list test
	test/test_stack.vpj - modified for test subdirectory


Release 0.1.3 (2010-03-17)

	Contains files from Release 0.1.2, changed for incremental
	Translator development, plus command line option handling
	changed to allow additional test routines.  Note the 0.1.1
	release was missing the test_parser.cpp file.  New (listed
	first) and updated files include:

	test_ibcp.cpp   - renamed from test_parser.cpp, few changes

	ibcp.cpp        - allowance for additional test routines
	ibcp.h          - new codes, changes Token and TableEntry
	parser.cpp      - changed to return EOL instead of null pointer
	parser1-5.txt   - files updated for new EOL Token
	table.cpp       - added unary_code field, added new entries


Release 0.1.2 (2010-03-13)

	Contains files from Release 0.1.1, where Translator development
	initiated.  Only contains minor changes, but now the new ibcp.cpp
	contains the main function and for now calls test_parser().  New
	(listed first) and updated files include:

	ibcp.cpp        - contains main(), calls test_parser()
	ibcp.vpj        - project file for ibcp

	ibcp.h          - new Token static member functions
	parser1-5.txt   - files updated for new Token static functions
	table.cpp       - updated internal function entry's token type
	test_parser.cpp - changed from being main file, ibcp updates


Release 0.1.1 (2010-03-11)

	Contains files from Release 0.1.0 updated for new command line
	-i option to test_parser program to allow interactive input (so
	compiling the program is unnecessary to test the parser code).
	Updated files include:

	parser.cpp      - modified to allow tab character as whitespace
	test_parser.cpp - new command line option for interactive input


Release 0.1.0 (2010-03-10)

	Contains files from Release 0.0.8 updated after testing the
	parser operator routines.  The Parser is fully implemented and
	tested.  New (listed first) and updated files include:

	parser5.txt     - string output from the test_parser program

	parser.cpp      - rewrote operator parser code
	table.cpp       - corrected 2 character operator table entries
	test_parser.cpp - added operators tests


Release 0.0.8 (2010-03-08)

	Contains files from Release 0.0.7 updated after testing the
	parser string routines.  New (listed first) and updated
	files include:

	parser4.txt     - string output from the test_parser program

	parser.cpp      - removed no closing quote check
	test_parser.cpp - added string tests


Release 0.0.7 (2010-03-07)

	Contains files from Release 0.0.6 updated after testing the
	parser number routines.  New (listed first) and updated
	files include:

	parser3.txt     - number output from the test_parser program

	ibcp.h          - added token error length
	parser.cpp      - added token error length
	parser1.txt     - updated for change in error output
	test_parser.cpp - changed error output, added number tests


Release 0.0.6 (2010-03-06)

	Contains files from Release 0.0.5 updated after testing the
	parser identifier routines.  New (listed first) and updated
	files include:

	parser2.txt     - identifier output from the test_parser program

	ibcp.h          - corrected problem with define functions
	parser.cpp      - corrected problem with define functions
	table.cpp       - fixed data type for internal string functions
	test_parser.cpp - command line argument, added identifier tests


Release 0.0.5 (2010-03-01)

	Contains files from Release 0.0.4 plus the initial
	implementation of the Parser class (all parser routines are
	implemented, but only the immediate command parsing has been
	fully tested) along with the test program test_parser.  The
	previous test programs and binaries are no longer included to
	reduce the size of the file (obtain them from the 0.0.4
	release).  New (listed first) and updated files include:

	parser.cpp      - contains the Parser class functions
	parser1.txt     - output from the test_parser program
	test_parser.cpp - source file for the test_parser program
	test_parser.vpj - project file for the test_parser program

	ibcp.h          - added Parser class and other structures
	table.cpp       - minor editing changes


Release 0.0.4 (2010-02-18)

	Contains files from Release 0.0.3.  The Table class has been
	implemented.  New file ibcp.h is the main include file for the
	project and for now contains enumerations, structures and
	classes needed for the Table class.  Test programs include
	test_cons for testing exception throwing from constructors (but
	otherwise unrelated to the project) and test_table for testing
	the various Table functions.  New and updated files include:

	codes.txt       - file listed codes and their values
	ibcp.h          - main include file
	list.h          - updated with minor changes
	table.cpp       - contains entries and Table class functions
	test_cons.cpp   - source file for the test_cons program
	test_cons.vpj   - project file for the test_cons program
	test_table.cpp  - source file for the test_table program
	test_table.vpj  - project file for the test_table program


Release 0.0.3 (2010-01-30)

	Contains files from Release 0.0.2.  The List class has been
	updated to have more list-like functions.  The test_stack
	program has been updated to include a new test list function.
	Updated files:

	list.h         - made member functions more list like
	string.cpp     - added length of zero check to constructors
	test_stack.cpp - added additional list tests


Release 0.0.2 (2010-01-15)

	Contains files from Release 0.0.1 except for Makefile.v (VIDE2
	will rebuild Makefile after loading first project, after this
	user Project/Rebuild Makefile menu command to create Makefile.v
	for project loaded) plus new files for String class, source file
	to test the functionality of the String class, and a source file
	to test the conversion of strings to numbers.  Project files now
	setup to run with GCC 4.4.0 (using MinGw).  New files included:

	rel_notes.txt   - this file
	string.h        - string class definition file
	string.cpp      - string class functions
	test_string.cpp - string test source file
	test_string.vpj - VIDE2 project file for test_string program
	test_nums.cpp   - numbers test source file
	test_nums.vpj   - VIDE2 project file for test_nums program


Release 0.0.1 (2009-12-29)

	Contains List template class along with source file to test the
	functionality of the List class.  Makefile and VIDE2 project
	file setup to run with free Borland C++ 5.5 Command Line Tools.
	Files included:

	list.h         - list template class definition file
	test_stack.cpp - stack test source file
	test_stack.vpj - VIDE2 project file for test_stack program
	Makefile.v     - VIDE2 generated Borland C++ 5.5 makefile
