
Input: Z = A$ + B$ + C$
           ^^^^^^^^^^^^-- expected numeric expression

Input: Z = MID$(A*B+C,1)
                ^^^^^-- expected string expression

Input: Z$ = MID$(A*B+C,1)
                 ^^^^^-- expected string expression

Input: Z$ = MID$(Y$,A$ + B$ + C$)
                    ^^^^^^^^^^^^-- expected numeric expression

Input: Z = A <> B$
                ^^-- expected numeric expression

Input: Z = A <> B$ < C$
Output: Z = A <> B$ < C$ 

Input: Z = A + B$ + C$
               ^^-- expected numeric expression

Input: Z = A < B$ + C$
               ^^^^^^^-- expected numeric expression

Input: Z = A + B$ + C%
               ^^-- expected numeric expression

Input: Z = A < B$ + C%
                    ^^-- expected string expression

Input: Z = A <> B$ + C$ < D$
Output: Z = A <> B$ + C$ < D$ 

Input: Z = A + B$ + C$ < D$
               ^^-- expected numeric expression

Input: Z = A + (B$ + C$ < D$)
Output: Z = A + (B$ + C$ < D$) 

Input: Z$ = A$ + B$ + C%
                      ^^-- expected string expression

Input: Z$ = A$ + B * C
                 ^^^^^-- expected string expression

Input: A$,RIGHT$(B,2) = C$
                 ^-- expected string variable

Input: A$=RIGHT$(B,2) = C$
                 ^-- expected string expression

Input: Z=MID$(A$,2) < "B"
Output: Z = MID$(A$, 2) < "B" 

Input: Z=MID$(A$,2) = B$
Output: Z = MID$(A$, 2) = B$ 

Input: Z(INT(A+B))=C
Output: Z(INT(A + B)) = C 

Input: Z(A$)=C
         ^^-- expected numeric expression

Input: Z(A)=Y(A$)
              ^^-- expected numeric expression

Input: Z(A),Y(A)=X(A)
Output: Z(A), Y(A) = X(A) 

Input: Z(A,Y(B))=X(A)
Output: Z(A, Y(B)) = X(A) 

Input: Z%(A%),Y%(A%)=X%(A%)
Output: Z%(A%), Y%(A%) = X%(A%) 

Input: Z$(A%),Y$(A%)=X$(A%)
Output: Z$(A%), Y$(A%) = X$(A%) 

Input: TAB(10)=A
       ^^^^-- expected command

Input: +
       ^-- expected command

Input: NOT
       ^^^-- expected command

Input: A PRINT B
         ^^^^^-- expected equal or comma for assignment

Input: A(I) PRINT B
            ^^^^^-- expected equal or comma for assignment

Input: MID$(A$ PRINT,4)=""
               ^^^^^-- expected comma

Input: LET (
           ^-- expected item for assignment

Input: A,PRINT
         ^^^^^-- expected double variable

Input: A = (0 LET 5)
              ^^^-- expected operator or closing parentheses

Input: A = 0 PRINT 5
             ^^^^^-- expected operator or end-of-statement

Input: A = (0 PRINT 5)
              ^^^^^-- expected operator or closing parentheses

Input: A$ = MID$(B$ PRINT, 4)
                    ^^^^^-- expected operator or comma

Input: A = INT(0 LET 5)
                 ^^^-- expected operator or closing parentheses

Input: A = INT(0 PRINT 5)
                 ^^^^^-- expected operator or closing parentheses

Input: A$ = MID$(B$, 4 PRINT)
                       ^^^^^-- expected operator, comma or closing parentheses

Input: A$ = MID$(B$, 4, 5 PRINT)
                          ^^^^^-- expected operator or closing parentheses

Input: MID$((A$),4)=B$
            ^-- expected string variable

Input: MID$(-A$,4)=B$
            ^-- expected string variable

Input: MID$(+A$,4)=B$
            ^-- expected string variable

Input: FNA=B
Output: FNA = B 

Input: FNA(I)=B
          ^-- expected equal or comma for assignment

Input: LET FNA=B
Output: LET FNA = B 

Input: LET FNA(I)=B
              ^-- expected equal or comma for assignment

Input: C,FNA=B
Output: C, FNA = B 

Input: C,FNA(I)=B
            ^-- expected equal or comma for assignment

Input: LET C,FNA=B
Output: LET C, FNA = B 

Input: LET C,FNA(I)=B
                ^-- expected equal or comma for assignment

Input: C,FNA,D=B
Output: C, FNA, D = B 

Input: C,FNA(I),D=B
            ^-- expected equal or comma for assignment

Input: LET C,FNA,D=B
Output: LET C, FNA, D = B 

Input: LET C,FNA(I),D=B
                ^-- expected equal or comma for assignment

