
Input: fna FnB fNc FND fna$ fna% fnword# fnhello$ fnindex%
	 0: DefFuncN     Double  |fna|
	 4: DefFuncN     Double  |FnB|
	 8: DefFuncN     Double  |fNc|
	12: DefFuncN     Double  |FND|
	16: DefFuncN     String  |fna$|
	21: DefFuncN     Integer |fna%|
	26: DefFuncN     Double  |fnword#|
	34: DefFuncN     String  |fnhello$|
	43: DefFuncN     Integer |fnindex%|
	51: Operator  Op None    EOL

Input: fna( FnB( fNc(FND( fna$(fna%( fnword#( fnhello$( fnindex%
	 0: DefFunc   () Double  |fna(|
	 5: DefFunc   () Double  |FnB(|
	10: DefFunc   () Double  |fNc(|
	14: DefFunc   () Double  |FND(|
	19: DefFunc   () String  |fna$(|
	24: DefFunc   () Integer |fna%(|
	30: DefFunc   () Double  |fnword#(|
	39: DefFunc   () String  |fnhello$(|
	49: DefFuncN     Integer |fnindex%|
	57: Operator  Op None    EOL

Input: a b(c$ D# asdf$ qwer( zxcv Asdf% QWER%( Nbb_34$( h_544_4#(
	 0: NoParen      Double  |a|
	 2: Paren     () Double  |b(|
	 4: NoParen      String  |c$|
	 7: NoParen      Double  |D#|
	10: NoParen      String  |asdf$|
	16: Paren     () Double  |qwer(|
	22: NoParen      Double  |zxcv|
	27: NoParen      Integer |Asdf%|
	33: Paren     () Integer |QWER%(|
	40: Paren     () String  |Nbb_34$(|
	49: Paren     () Double  |h_544_4#(|
	58: Operator  Op None    EOL

Input: LET PRINT end then xor Abs(CHR$(val( end if left$ left$(
	 0: Command   Op LET
	 4: Command   Op PRINT
	10: Command   Op END
	14: Command   Op THEN
	19: Operator  Op Integer XOR
	23: IntFunc   () Double  ABS(
	27: IntFunc   () String  CHR$(
	32: IntFunc   () Double  VAL(
	37: Command   Op ENDIF
	44: NoParen      String  |left$|
	50: IntFunc   () String  LEFT$(
	56: Operator  Op None    EOL

Input: rem this should be a comment
	 0: Command   Op REM | this should be a comment|
	28: Operator  Op None    EOL

Input: rem:this should be a comment
	 0: Command   Op REM |:this should be a comment|
	28: Operator  Op None    EOL

Input: rem-this should be a comment
	 0: Command   Op REM |-this should be a comment|
	28: Operator  Op None    EOL

Input: fn fn( fn1 fn1( fn_ fn_(
	 0: NoParen      Double  |fn|
	 3: Paren     () Double  |fn(|
	 7: NoParen      Double  |fn1|
	11: Paren     () Double  |fn1(|
	16: NoParen      Double  |fn_|
	20: Paren     () Double  |fn_(|
	24: Operator  Op None    EOL
