
Input: A - B
Output: A - B 

Input: A + B
Output: A + B 

Input: A + B * C
Output: A + B * C 

Input: A * B + C
Output: A * B + C 

Input: A * -B + -C^D
Output: A * -B + -C ^ D 

Input: Value1 + Value2 - Value3 - Value4
Output: Value1 + Value2 - Value3 - Value4 

Input: var_A * Var_A + Var_B * Var_B
Output: var_A * Var_A + Var_B * Var_B 

Input: not A < 5 = B > 2
Output: NOT A < 5 = B > 2 

Input: not A < 5 and B > 2 or C < 1 and D <> 2
Output: NOT A < 5 AND B > 2 OR C < 1 AND D <> 2 

Input: A * B / C \ D MOD E
Output: A * B / C \ D MOD E 

Input: A mod B \ C / D * E
Output: A MOD B \ C / D * E 

Input: A * B ^ 2
Output: A * B ^ 2 

Input: a$ = "this" + "test"
Output: a$ = "this" + "test" 

Input: -E
Output: -E 

Input: -45 + A
Output: -45 + A 

Input: -A + B
Output: -A + B 

Input: -A + --B
Output: -A + --B 

Input: A% + B
Output: A% + B 

Input: A + B%
Output: A + B% 

Input: A% + B%
Output: A% + B% 

Input: A% + B% + C
Output: A% + B% + C 

Input: A% - B
Output: A% - B 

Input: A - B%
Output: A - B% 

Input: A% - B%
Output: A% - B% 

Input: A% - B% * C
Output: A% - B% * C 

Input: A% + B * C ^ D
Output: A% + B * C ^ D 

Input: A$ + B$
Output: A$ + B$ 

Input: A$ < B$ = 0
Output: A$ < B$ = 0 

Input: A$ + B
            ^-- expected string expression

Input: A$ + B%
            ^^-- expected string expression

Input: A + B$
           ^^-- expected numeric expression

Input: A% + B$
            ^^-- expected numeric expression

Input: A$ - B$
       ^^-- expected numeric expression

Input: -A$
        ^^-- expected numeric expression

Input: else
       ^^^^-- expected expression

Input: - else
         ^^^^-- expected numeric expression

Input: - +
         ^-- expected numeric expression

Input: +
       ^-- expected expression

Input: a print
         ^^^^^-- expected operator or end-of-statement

Input: a a
         ^-- expected operator or end-of-statement

Input: a + else
           ^^^^-- expected numeric expression

Input: a + +
           ^-- expected numeric expression

Input: a not
         ^^^-- expected binary operator or end-of-statement

Input: ..
       ^^-- expected digits or single decimal point in floating point constant

Input: A ..
         ^-- expected operator or end-of-statement

Input: A + ..
           ^^-- expected digits or single decimal point in floating point constant

Input: A + B ..
             ^-- expected operator or end-of-statement

Input: %
       ^-- expected expression

Input: A %
         ^-- expected operator or end-of-statement

Input: A$ + %
            ^-- expected string expression

Input: A + B %
             ^-- expected operator or end-of-statement

